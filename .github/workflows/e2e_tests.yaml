name: E2E Tests
on:
  workflow_run:
    workflows: ["test and lint"]
    types: [completed]

jobs:
  e2e_tests:
    if: github.event.workflow_run.conclusion == 'success'
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set PLAYWRIGHT_BROWSERS_PATH and TRACES_ARTIFACT_NAME
        run: |
          echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/ms-playwright" >> $GITHUB_ENV
          TRACES_ARTIFACT_NAME="playwright-traces-${{ github.event.pull_request.number || github.run_number }}"
          echo "TRACES_ARTIFACT_NAME=${TRACES_ARTIFACT_NAME//\//-}" >> $GITHUB_ENV

      - name: Check Playwright version consistency in uv.lock files
        run: |
          set -euo pipefail

          FRONTEND_VERSION=$(uv export --frozen --no-hashes --all-extras --directory src/frontend | grep '^playwright==' | cut -d= -f3)
          CORE_VERSION=$(uv export --frozen --no-hashes --all-extras --directory src/core | grep '^playwright==' | cut -d= -f3)

          echo "Frontend playwright version: $FRONTEND_VERSION"
          echo "Core playwright version:     $CORE_VERSION"

          if [ "$FRONTEND_VERSION" != "$CORE_VERSION" ]; then
            echo "::error ::Mismatch in declared playwright versions!"
            echo "::error ::src/frontend declares $FRONTEND_VERSION, but src/core declares $CORE_VERSION."
            echo "::error ::Please run \`uv sync --upgrade --all-extras\` in both folders to align."
            exit 1
          fi

      - name: Set up Python
        working-directory: src/core
        run: uv python install

      - name: Install core
        working-directory: src/core
        run: uv sync --all-extras

      - name: Cache Playwright Browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright

      - name: Install Playwright dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: src/core
        run: uv run playwright install --with-deps chromium

      - name: Download built frontend
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.test_gui.outputs.gui_artifact_name }}
          path: src/gui/

      - name: Extract Artifact for CI/CD
        working-directory: src/gui
        run: tar xf ${{ needs.test_gui.outputs.gui_artifact_name }}.tar.gz

      - name: Run e2e tests
        id: run_e2e
        working-directory: src/core
        run: uv run pytest --e2e-ci

      - name: Install frontend dependencies
        working-directory: src/frontend
        run: uv sync --all-extras

      - name: Build Tailwind CSS
        working-directory: src/frontend
        run: ./build_tailwindcss.sh

      - name: Run e2e tests frontend
        id: run_e2e_frontend
        working-directory: src/frontend
        run: uv run pytest --e2e-ci

      - name: Upload a e2e-test trace
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && (steps.run_e2e.outcome == 'failure' || steps.run_e2e_frontend.outcome == 'failure') }}
        with:
          retention-days: 7
          overwrite: true
          name: ${{ env.TRACES_ARTIFACT_NAME }}
          path: src/**/taranis_ai_*_trace.zip