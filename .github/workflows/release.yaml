name: Release on pushed tags

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get tag name
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Update env.sample
        run: |
          cp docker/env.sample ${{ runner.temp }}
          sed -i 's/^TARANIS_TAG=.*/TARANIS_TAG=${{ env.TAG }}/' ${{ runner.temp }}/env.sample

      - name: Get Tag Message
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          echo "### ${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
          git tag -l --format='%(contents)' ${{ env.TAG }} >> $GITHUB_STEP_SUMMARY
          git tag -l --format='%(contents)' ${{ env.TAG }} >> ${{ runner.temp }}/release_body.md

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retag Images
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          TAG: ${{ env.TAG }}
        run: |
          images=("taranis-core" "taranis-worker" "taranis-gui")

          # Loop through images, pull, tag, and push
          for image in "${images[@]}"; do
            docker pull ghcr.io/${REPOSITORY_OWNER}/${image}:latest
            docker buildx imagetools create --tag ghcr.io/${REPOSITORY_OWNER}/${image}:${TAG} ghcr.io/${REPOSITORY_OWNER}/${image}:latest
          done

      - name: Release
        uses: softprops/action-gh-release@v2.0.6
        with:
          generate_release_notes: true
          append_body: true
          body_path: ${{ runner.temp }}/release_body.md
          files: |
            docker/compose.yml
            ${{ runner.temp }}/env.sample
