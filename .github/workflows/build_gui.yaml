name: build gui

on:
  push:
    paths:
    - 'src/gui/**'
    - 'docker/Containerfile.gui'
    - '.github/workflows/build_gui.yaml'
    branches:
    - master

permissions:
  packages: write
  contents: write

jobs:
  build_npm:
    name: npm build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: |
            src/gui/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: src/gui
        run: pnpm install
      - name: Rebuild the dist/ directory
        working-directory: src/gui
        run: pnpm run build
      - name: Upload dist to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: taranis_gui
          overwrite: true
          path: |
            src/gui/dist/

  build_docker:
    name: build with docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set build env
        run: |
          echo "GHCR_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
          echo "GIT_INFO=$(./docker/git_info.sh)" >>${GITHUB_ENV}
      - name: Build and push gui
        uses: docker/build-push-action@v5
        with:
          file: docker/Containerfile.gui
          push: true
          tags: |
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-gui:latest
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-gui:${{ github.ref_name }}
          build-args: |
            git_info=${{ env.GIT_INFO }}
          cache-from: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-gui-cache:latest
          cache-to: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-gui-cache:latest,mode=max
