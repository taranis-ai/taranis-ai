name: build worker

on:
  push:
    paths:
    - 'src/worker/**'
    - 'docker/Containerfile.worker'
    - '.github/workflows/build_worker.yaml'
    branches:
    - master

permissions:
  packages: write
  contents: write
  id-token: write
  attestations: write

env:
  GHCR_IMAGE: ghcr.io/taranis-ai/taranis-worker
  LATEST: ${{ github.ref == 'refs/heads/master' }}

jobs:
  test:
    name: pytest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/worker
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          prune-cache: false

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Install Playwright dependencies
        run: uv run playwright install --with-deps chromium

      - name: pytest
        run: uv run pytest


  build_wheel:
    name: build wheel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/worker
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          prune-cache: false

      - name: Set up Python
        run: uv python install

      - name: build
        run: |
          uv build
      - name: Upload wheel to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: taranis_worker
          overwrite: true
          path: |
            dist/taranis_worker-*.whl
            dist/taranis_worker-*.tar.gz


  build_container:
    name: build container
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            arch: arm64
            platform: linux/arm64
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set build env
        run: |
          echo "GIT_INFO=$(./docker/git_info.sh)" >>${GITHUB_ENV}

      - name: Set metadata for container build
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_IMAGE }}
          labels: |
            org.opencontainers.image.architecture=${{ matrix.arch }}

      - name: Build and push worker
        uses: docker/build-push-action@v6
        id: build
        with:
          file: docker/Containerfile.worker
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          build-args: |
            git_info=${{ env.GIT_INFO }}
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
          cache-from: type=registry,ref=${{ env.GHCR_IMAGE }}-cache-${{ matrix.arch }}:latest
          cache-to: type=registry,ref=${{ env.GHCR_IMAGE }}-cache-${{ matrix.arch }}:latest,mode=max
          outputs: type=image,"name=${{ env.GHCR_IMAGE }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1


  merge:
    runs-on: ubuntu-latest
    needs:
      - build_container
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set metadata for container build
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_IMAGE }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch,enable=${{ !env.LATEST }}
            type=raw,value=latest,enable=${{ env.LATEST }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_IMAGE }}@sha256:%s ' *)

      - name: Get final merged image digest
        if: ${{ env.LATEST }}
        run: |
          DIGEST=$(docker buildx imagetools inspect ${{ env.GHCR_IMAGE }}:latest --format '{{ json .Manifest.Digest }}' | tr -d '"')
          echo "MERGED_DIGEST=$DIGEST" >> $GITHUB_ENV

      - name: Generate attestation for merged multiarch image
        if: ${{ env.LATEST }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.GHCR_IMAGE }}
          subject-digest: ${{ env.MERGED_DIGEST }}
          push-to-registry: true
