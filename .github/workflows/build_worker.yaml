name: build worker

on:
  push:
    paths:
    - 'src/worker/**'
    - 'docker/Containerfile.worker'
    - '.github/workflows/build_worker.yaml'
    branches:
    - master

permissions:
  packages: write

jobs:
  test:
    name: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          prune-cache: false

      - name: Set up Python
        working-directory: src/core
        run: uv python install

      - name: Install dependencies
        working-directory: src/worker
        run: uv sync --all-extras --dev

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Playwright dependencies
        working-directory: src/worker
        run: uv run playwright install --with-deps chromium

      - name: pytest
        working-directory: src/worker
        run: uv run pytest

  build_wheel:
    name: build wheel
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          prune-cache: false

      - name: Set up Python
        working-directory: src/worker
        run: uv python install

      - name: build
        working-directory: src/worker
        run: |
          uv build
      - name: Upload wheel to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: taranis_worker
          overwrite: true
          path: |
            src/worker/dist/taranis_worker-*.whl
            src/worker/dist/taranis_worker-*.tar.gz


  build_container:
    name: build container
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            platform: linux/arm64
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set build env
        run: |
          echo "GHCR_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
          echo "GIT_INFO=$(./docker/git_info.sh)" >>${GITHUB_ENV}

      - name: Set metadata for container build
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.GHCR_OWNER }}/taranis-worker
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push worker
        uses: docker/build-push-action@v6
        with:
          file: docker/Containerfile.worker
          push: true
          provenance: false
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            git_info=${{ env.GIT_INFO }}
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
          cache-from: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-worker-cache:latest
          cache-to: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-worker-cache:latest,mode=max
