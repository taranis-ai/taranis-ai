FROM python:3.12-slim AS builder

COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv
WORKDIR /app/

# install common packages
RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \
    libpq-dev \
    git \
    curl \
    openssl \
    build-essential \
    python3-dev

COPY ./src/core/. /app/
COPY ./.git /.git

RUN uv venv && \
    export PATH="/app/.venv/bin:$PATH" && \
    uv sync --frozen && \
    python -m compileall /app/

FROM python:3.12-slim

WORKDIR /app/

RUN groupadd user && useradd --home-dir /app -g user user && chown -R user:user /app
RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \
    libpq-dev \
    curl \
    openssl
RUN install -d -o user -g user /app/data

COPY --from=builder --chown=user:user /app/.venv /app/.venv
COPY --chown=user:user ./src/core/. /app/

USER user

ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH=/app
ARG git_info
ENV GIT_INFO=${git_info:-'{}'}
RUN echo BUILD_DATE=$(date --iso-8601=minutes) > .env
ENV DATA_FOLDER=/app/data
ENV GRANIAN_THREADS=2
ENV GRANIAN_WORKERS=2
ENV GRANIAN_BLOCKING_THREADS=4


VOLUME ["/app/data"]
EXPOSE 8080

CMD ["taranis-ai"]
